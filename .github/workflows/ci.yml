name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'yarn'
    
    - name: Cache Eslint dependencies
      uses: actions/cache@v3
      with: 
        path: ./.cache/eslint
        key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}-${{ hashFiles('**/.eslintrc.cjs') }}
        restore-keys: |
          ${{ runner.os }}-eslint-

    - name: Cache Playwright browsers
      uses: actions/cache@v3
      with:
        path: ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-playwright-

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Install Playwright
      run: yarn playwright install --with-deps

    - name: Lint
      run: yarn lint:ci

    - name: Test
      run: yarn test

    - name: Build
      run: yarn build


    # - name: Set up Docker Buildx
    #   uses: docker/setup-buildx-action@v1

    # - name: Log in to Docker registry
    #   uses: docker/login-action@v1
    #   with:
    #     registry: ghcr.io  # Change this to your registry's URL
    #     username: ${{ secrets.REGISTRY_USERNAME }}
    #     password: ${{ secrets.REGISTRY_PASSWORD }}

    # - name: Build and push Docker image using Docker Compose
    #   run: |
    #     docker-compose up --build
    #     docker-compose push
    #   env:
    #     DOCKER_BUILDKIT: 1
    #     COMPOSE_DOCKER_CLI_BUILD: 1
